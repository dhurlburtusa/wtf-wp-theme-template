{
  "name": "wtf-wp-theme-template",
  "version": "0.0.0-alpha",
  "description": "The WTF WordPress Theme Framework",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dhurlburtusa/wtf-wp-theme-template.git"
  },
  "keywords": [
    "babel",
    "eslint",
    "framework",
    "postcss",
    "sass",
    "scss",
    "stylelint",
    "template",
    "theme",
    "webpack",
    "wordpress",
    "wtf"
  ],
  "author": "Danny Hurlburt",
  "license": "UNLICENSED",
  "bugs": {
    "url": "https://github.com/dhurlburtusa/wtf-wp-theme-template/issues"
  },
  "homepage": "https://github.com/dhurlburtusa/wtf-wp-theme-template#readme",
  "dependencies": {
    "core-js": "^3.3.2"
  },
  "devDependencies": {
    "@babel/core": "^7.6.4",
    "@babel/preset-env": "^7.6.3",
    "@babel/preset-react": "^7.6.3",
    "@babel/preset-typescript": "^7.6.0",
    "@wordpress/browserslist-config": "^2.6.0",
    "babel-loader": "^8.0.6",
    "browser-sync": "^2.26.7",
    "cache-loader": "^4.1.0",
    "cssnano": "^4.1.10",
    "eslint": "^6.5.1",
    "eslint-config-standard": "^14.1.0",
    "eslint-plugin-import": "^2.18.2",
    "eslint-plugin-node": "^10.0.0",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-standard": "^4.0.1",
    "file-loader": "^4.2.0",
    "jest": "^24.9.0",
    "lint-staged": "^9.4.2",
    "npm-run-all": "^4.1.5",
    "postcss-assets": "^5.0.0",
    "postcss-cli": "^6.1.3",
    "postcss-disabled": "^1.0.0",
    "postcss-easy-import": "^3.0.0",
    "postcss-hash": "^1.0.2",
    "postcss-safe-parser": "^4.0.1",
    "postcss-scss": "^2.0.0",
    "postcss-strip-inline-comments": "^0.1.5",
    "postcss-syntax": "^0.36.2",
    "postcss-url": "^8.0.0",
    "precss": "^4.0.0",
    "rimraf": "^3.0.0",
    "stylelint": "^10.1.0",
    "stylelint-config-wordpress": "^14.0.0",
    "stylelint-scss": "^3.10.1",
    "terser-webpack-plugin": "^2.1.3",
    "url-loader": "^2.2.0",
    "webpack": "^4.41.2",
    "webpack-assets-manifest": "^3.1.1",
    "webpack-cli": "^3.3.9"
  },
  "scripts": {
    "browsersync": "browser-sync start --config browsersync.config.js",
    "@comment build": "Builds the project for execution in a projection environment.",
    "build": "npm-run-all --parallel build:assets:* -- --env production",
    "build:assets:scripts": "webpack",
    "build:assets:styles": "postcss src/styles/*.{css,scss} --base src/styles --dir assets/styles --ext css --map",
    "@comment clean": "Removes all the project's generated files.",
    "clean": "npm-run-all --parallel clean:*",
    "clean:assets": "npm-run-all --parallel clean:assets:*",
    "clean:assets:scripts": "rimraf assets/scripts/*.{js,json,LICENSE,map}",
    "clean:assets:styles": "rimraf assets/styles/*.{css,json,map}",
    "clean:cache": "rimraf node_modules/.cache/babel-loader/ node_modules/.cache/cache-loader/ node_modules/.cache/terser-webpack-plugin/",
    "precommit": "lint-staged",
    "postinstall": "npm run build",
    "@comment lint": "Lints the project's style assets and scripts.",
    "lint": "npm-run-all --parallel lint:assets:* lint:scripts",
    "@comment lint:assets:styles": "Lints the project's style assets.",
    "lint:assets:styles": "stylelint \"src/styles/**/*.{css,scss}\"",
    "@comment lint:scripts": [
      "Lints the project's scripts",
      "",
      "The !**/.* allows files beginning with a dot to not be ignored. That is, they",
      "are also subject to linting."
    ],
    "lint:scripts": "eslint --ignore-path .eslintignore --ignore-pattern \"!**/.*\" .",
    "start": "npm-run-all --parallel watch:assets:* browsersync",
    "test": "npm run test:unit",
    "test:coverage": "npm run test:unit --coverage",
    "@comment test:unit": "Runs the project's unit tests.",
    "test:unit": "jest --config=__tests__/unit/jest.config.js",
    "watch": "npm-run-all --parallel watch:assets:*",
    "@comment watch:assets:scripts": [
      "Builds the scripts in development mode and watches for script file changes.",
      "",
      "@option --env.debug - To run in debug mode."
    ],
    "watch:assets:scripts": "npm run build:assets:scripts -- --mode development --watch",
    "@comment watch:assets:styles": [
      "Builds the style assets and watches for style asset file changes."
    ],
    "watch:assets:styles": "npm run build:assets:styles -- --watch"
  }
}
